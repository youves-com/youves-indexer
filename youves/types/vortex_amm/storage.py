# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, Union

from pydantic import BaseModel, Extra


class DirectionItem(BaseModel):
    class Config:
        extra = Extra.forbid

    aDD: Dict[str, Any]


class DirectionItem1(BaseModel):
    class Config:
        extra = Extra.forbid

    rEMOVE: Dict[str, Any]


class UserInvestments(BaseModel):
    class Config:
        extra = Extra.forbid

    direction: Union[DirectionItem, DirectionItem1]
    token: str
    xtz: str


class VortexAmmStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    freezeBaker: bool
    history: Dict[str, str]
    lqtAddress: str
    lqtTotal: str
    manager: str
    reserve: str
    selfIsUpdatingTokenPool: bool
    tokenAddress: str
    tokenPool: str
    user_investments: Dict[str, UserInvestments]
    xtzPool: str

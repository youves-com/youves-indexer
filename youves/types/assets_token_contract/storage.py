# generated by datamodel-codegen:
#   filename:  storage.json

from __future__ import annotations

from typing import Any, Dict, List

from pydantic import BaseModel, Extra


class Key(BaseModel):
    class Config:
        extra = Extra.forbid

    owner: str
    token_id: str


class Administrator(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key
    value: Dict[str, Any]


class Key1(BaseModel):
    class Config:
        extra = Extra.forbid

    owner: str
    token_id: str


class LedgerItem(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key1
    value: str


class Key2(BaseModel):
    class Config:
        extra = Extra.forbid

    operator: str
    owner: str
    token_id: str


class Operator(BaseModel):
    class Config:
        extra = Extra.forbid

    key: Key2
    value: Dict[str, Any]


class TokenMetadata(BaseModel):
    class Config:
        extra = Extra.forbid

    token_id: str
    token_info: Dict[str, str]


class AssetsTokenContractStorage(BaseModel):
    class Config:
        extra = Extra.forbid

    administrators: List[Administrator]
    ledger: List[LedgerItem]
    operators: List[Operator]
    token_metadata: Dict[str, TokenMetadata]
    total_supply: Dict[str, str]
